# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/slack-bot # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:8.11
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # run tests!
#      - run:
#          name: test
#          command: npm test
#      - run:
#          name: code-coverage
#          command: '../node_modules/.bin/nyc report --reporter=text-lcov'
#      - store_artifacts: # special step to save test results as as artifact
#          path: test-results.xml
#          prefix: tests
#      - store_artifacts:
#          path: coverage
#          prefix: coverage
#      - store_test_results: # special step to upload test results for display in Test Summary
#          path: test-results.xml

  deploy:
    machine:
        enable: true
    working_directory: ~/slack-bot
    environment:
      - HEROKU_APP : yenarue-slack-bot
    steps:
      - checkout
#      - run:
#          name: Setup Heroku
#          command: bash .circleci/setup-heroku.sh
      - run:
          name: Deploy to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git circleci-test

####### // use setup-heroku.sh
#            git push heroku circleci-test
#            heroku run rake db:migrate
#            sleep 5
#            heroku restart

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: circleci-test

